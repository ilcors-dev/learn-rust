{"$message_type":"diagnostic","message":"3 positional arguments in format string, but no arguments were given","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2910,"byte_end":2912,"line_start":128,"line_end":128,"column_start":28,"column_end":30,"is_primary":true,"text":[{"text":"                println!(\"({}, {}, {})\",)","highlight_start":28,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2914,"byte_end":2916,"line_start":128,"line_end":128,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"                println!(\"({}, {}, {})\",)","highlight_start":32,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2918,"byte_end":2920,"line_start":128,"line_end":128,"column_start":36,"column_end":38,"is_primary":true,"text":[{"text":"                println!(\"({}, {}, {})\",)","highlight_start":36,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: 3 positional arguments in format string, but no arguments were given\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:128:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                println!(\"({}, {}, {})\",)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"can't compare `[u8]` with `u8`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2850,"byte_end":2852,"line_start":126,"line_end":126,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"            if b == in_buf {","highlight_start":18,"highlight_end":20}],"label":"no implementation for `[u8] == u8`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `std::cmp::PartialEq<u8>` is not implemented for `[u8]`, which is required by `&[u8]: std::cmp::PartialEq<&u8>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `std::cmp::PartialEq<Rhs>`:\n  <&[T] as std::cmp::PartialEq<[U; N]>>\n  <&[T] as std::cmp::PartialEq<std::vec::Vec<U, A>>>\n  <&mut [T] as std::cmp::PartialEq<[U; N]>>\n  <&mut [T] as std::cmp::PartialEq<std::vec::Vec<U, A>>>\n  <[T; N] as std::cmp::PartialEq<&[U]>>\n  <[T; N] as std::cmp::PartialEq<&mut [U]>>\n  <[T; N] as std::cmp::PartialEq<[U; N]>>\n  <[T; N] as std::cmp::PartialEq<[U]>>\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `&[u8]` to implement `std::cmp::PartialEq<&u8>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: can't compare `[u8]` with `u8`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:126:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if b == in_buf {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `[u8] == u8`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `std::cmp::PartialEq<u8>` is not implemented for `[u8]`, which is required by `&[u8]: std::cmp::PartialEq<&u8>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `std::cmp::PartialEq<Rhs>`:\u001b[0m\n\u001b[0m              <&[T] as std::cmp::PartialEq<[U; N]>>\u001b[0m\n\u001b[0m              <&[T] as std::cmp::PartialEq<std::vec::Vec<U, A>>>\u001b[0m\n\u001b[0m              <&mut [T] as std::cmp::PartialEq<[U; N]>>\u001b[0m\n\u001b[0m              <&mut [T] as std::cmp::PartialEq<std::vec::Vec<U, A>>>\u001b[0m\n\u001b[0m              <[T; N] as std::cmp::PartialEq<&[U]>>\u001b[0m\n\u001b[0m              <[T; N] as std::cmp::PartialEq<&mut [U]>>\u001b[0m\n\u001b[0m              <[T; N] as std::cmp::PartialEq<[U; N]>>\u001b[0m\n\u001b[0m              <[T; N] as std::cmp::PartialEq<[U]>>\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `&[u8]` to implement `std::cmp::PartialEq<&u8>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `writer`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2521,"byte_end":2527,"line_start":112,"line_end":112,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"fn deflate(file: &File, writer: &mut BufWriter<File>) {","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2521,"byte_end":2527,"line_start":112,"line_end":112,"column_start":25,"column_end":31,"is_primary":true,"text":[{"text":"fn deflate(file: &File, writer: &mut BufWriter<File>) {","highlight_start":25,"highlight_end":31}],"label":null,"suggested_replacement":"_writer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `writer`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:112:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn deflate(file: &File, writer: &mut BufWriter<File>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_writer`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}
